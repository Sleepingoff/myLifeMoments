터미널에 npm init
> package.json 파일 생성 - npm을 이용해 여러 모듈을 적용할 때 등 관리를 좀 더 쉽게 할 수 있는 파일. 없어도 가능
npm install figlet 피글렛 모듈 설치
> package-lock.json - 패키지보다 자세하게 정확한 정보가 기록되는 것
설치할 때 -g 를 붙이면 컴퓨터에 설치한다.(전역) 그러나 이러면 충돌이 일어날 수 있으니 주의
> node_modules - 다운받은 모듈이 있는 곳

-----------------

express란
웹 프레임워크를 만드는 모듈
웹 프레임워크? 백엔드로 요청을 보냈을 때 서버에서 응답으로 돌려주는 것

-----------------

port란
usb port 등등 출입구같은 개념
특정 포트를 listen하고 있어야 들어갈 수 잇는 것
TCP/UDP의 포트 목록 - 위키백과
https://ko.wikipedia.org/wiki/TCP/UDP%EC%9D%98_%ED%8F%AC%ED%8A%B8_%EB%AA%A9%EB%A1%9D
443 https
포트마다 다 다른 프로그램 실행 가능
한 서버 내에서 여러 개를 켜놓을 수 있다.

----

로컬 호스트란?
내 컴퓨터로 접속할 때 쓰는 

---

app.get('/', ()=>{})

get: http 메소드
'/':라우팅
()=>{} 콜백함수

---

http 메소드
요청의 목적, 종류를 알리는 수단
get - 주소창
post - 주소창x
get or post로 http 메소드를 달고 데이터를 보낼 수 있다.
get은 주소창에 정보를 담아서 보내는 것\
post는 주소창이 아니라 어딘가에 담아서 보내는 것

---

라우팅
슬래시 뒤에 붙는 파일명같은 친구들
https://www.youtube.com/watch?v=Tt_tKhhhJqY
youtube.com/요기에 써져 있는 애들을 라우팅이라고 부른다

---

콜백 함수
함수(끝나고 실행할 함수)

예시
setTimeout(콜백함수, 초)

---

app.get('/', 여기부터(req, res) => {
    res.send('hello world!')
}여기까지 콜백함수 실행)

즉, /라우팅으로 get방식을 써서 들어와서 콜백함수를 실행해라
/ 만 써져있으면 가장 기본 주소. 루트?
라우팅엔 한글이 들어갈 수 없으며 인코딩 변환사이트에서 따로 변환을 해주면 가능

---

req, res 요청과 응답
req 요청 정보
res 응답 정보
res.send(이 정보를) 응답에 보내겠다!

---
listen은 항상 하고 있음... 서버가 켜져있을 때

-------------

get 방식으로 req를 보낼때 쓰는 방법
params, query 대표적인 두가지 방식

------
api 서버
cors 이슈
html파일에서 요청이 오면 이상한 걸 받을 수 있기 때문에 응답을 기본적으로 막는다.
html파일의 요청이 잘 될 수 있도록 만들어주는 cors 모듈